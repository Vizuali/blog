{"componentChunkName":"component---src-templates-blog-post-js","path":"/ascii-shader/","result":{"data":{"site":{"siteMetadata":{"title":"Visual Computing 2020"}},"mdx":{"id":"5356a204-a218-5bd8-90cf-9081bfdd4d7f","excerpt":"This is the first shader with p5.js & gatsby References Adaptation from shadertoy","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Ascii: p5js & shaders\",\n  \"date\": \"2020-06-15T14:23:00.0000\",\n  \"description\": \"Basic ASCII shader implementation on p5js.\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", null, \"This is the first shader with p5.js & gatsby\"), mdx(\"div\", null, typeof window !== \"undefined\" && mdx(AsciiShaderSketch, {\n    mdxType: \"AsciiShaderSketch\"\n  })), mdx(\"h2\", null, \"References\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://www.shadertoy.com/view/lssGDj\"\n  }), \"Adaptation from shadertoy\"))));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"title":"Ascii: p5js & shaders","date":"June 15, 2020","description":"Basic ASCII shader implementation on p5js."}}},"pageContext":{"slug":"/ascii-shader/","previous":{"fields":{"slug":"/ascii-software/"},"frontmatter":{"title":"Ascii: early approach to image"}},"next":{"fields":{"slug":"/gray-software/"},"frontmatter":{"title":"Image Processing: Gray scales (Software)"}}}}}